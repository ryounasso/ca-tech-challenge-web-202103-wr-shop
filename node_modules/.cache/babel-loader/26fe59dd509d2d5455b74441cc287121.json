{"ast":null,"code":"var _jsxFileName = \"/Users/wabuchiryota/pro_train/ca-tech-challenge-web-202103/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport IconButton from '@material-ui/core/IconButton';\nimport clsx from 'clsx';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  anchor: {\n    textDecoration: 'none',\n    color: 'inherit'\n  }\n}));\n\nfunction Header() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      color: \"default\",\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          edge: \"start\",\n          className: clsx(classes.menuButton, open && classes.hide),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          className: classes.drawer,\n          variant: \"persistent\",\n          anchor: \"left\",\n          open: open,\n          classes: {\n            paper: classes.drawerPaper\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.drawerHeader,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleDrawerClose,\n              children: theme.direction === 'ltr' ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 42\n              }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 15\n              }, this)\n            }, text, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 48\n                }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 64\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this)]\n            }, text, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(AnchorLink, {\n            href: \"#about\",\n            className: classes.anchor,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"HOME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AnchorLink, {\n            href: \"#contact\",\n            className: classes.anchor,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              children: \"CONTACT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Header, \"BAE+6jhCe9g7Qr6cpkYxX/KlMJI=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/wabuchiryota/pro_train/ca-tech-challenge-web-202103/src/components/Header.js"],"names":["React","AppBar","Toolbar","Button","makeStyles","useTheme","AnchorLink","IconButton","clsx","MenuIcon","Drawer","ChevronLeftIcon","ChevronRightIcon","Divider","List","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","useStyles","theme","anchor","textDecoration","color","Header","classes","open","setOpen","useState","handleDrawerOpen","handleDrawerClose","menuButton","hide","drawer","paper","drawerPaper","drawerHeader","direction","map","text","index","alignItems"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport AnchorLink from 'react-anchor-link-smooth-scroll'\nimport IconButton from '@material-ui/core/IconButton';\nimport clsx from 'clsx';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst useStyles = makeStyles((theme) => ({\n    anchor: {\n        textDecoration : 'none',\n        color : 'inherit'\n    }\n}));\n\nfunction Header() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const theme = useTheme();\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleDrawerClose = () => {\n        setOpen(false);\n      };\n\n    return (\n        <>\n        <AppBar\n        color='default'\n        position='static'\n        >\n            <Toolbar>\n            <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <div style={{ alignItems: 'center' }}>\n                <AnchorLink href=\"#about\"\n                    className={classes.anchor}>\n                    <Button>\n                        HOME\n                    </Button>\n                </AnchorLink>\n\n                <AnchorLink href=\"#contact\" className={classes.anchor}>\n                    <Button color='inherit'>\n                        CONTACT\n                    </Button>\n                </AnchorLink>\n        </div>\n            </Toolbar>\n        </AppBar>\n    </>\n    )\n}\n\nexport default Header"]},"metadata":{},"sourceType":"module"}