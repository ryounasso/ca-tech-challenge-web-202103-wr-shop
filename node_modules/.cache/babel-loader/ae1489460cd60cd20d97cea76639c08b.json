{"ast":null,"code":"var _jsxFileName = \"/Users/wabuchiryota/pro_train/ca-tech-challenge-web-202103/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport IconButton from '@material-ui/core/IconButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  anchor: {\n    textDecoration: 'none',\n    color: 'inherit'\n  }\n}));\n\nfunction Header() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      color: \"default\",\n      position: \"static\",\n      style: {\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"open drawer\",\n        onClick: handleDrawerOpen,\n        edge: \"start\",\n        className: clsx(classes.menuButton, open && classes.hide),\n        children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        className: classes.drawer,\n        variant: \"persistent\",\n        anchor: \"left\",\n        open: open,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.drawerHeader,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleDrawerClose,\n            children: theme.direction === 'ltr' ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 42\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 48\n              }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 48\n              }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(AnchorLink, {\n          href: \"#about\",\n          className: classes.anchor,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"HOME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AnchorLink, {\n          href: \"#contact\",\n          className: classes.anchor,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            children: \"CONTACT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Header, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/wabuchiryota/pro_train/ca-tech-challenge-web-202103/src/components/Header.js"],"names":["React","AppBar","Toolbar","Button","makeStyles","AnchorLink","IconButton","useStyles","theme","anchor","textDecoration","color","Header","classes","alignItems","handleDrawerOpen","clsx","menuButton","open","hide","drawer","paper","drawerPaper","drawerHeader","handleDrawerClose","direction","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AnchorLink from 'react-anchor-link-smooth-scroll'\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n    anchor: {\n        textDecoration : 'none',\n        color : 'inherit'\n    }\n}));\n\nfunction Header() {\n    const classes = useStyles();\n\n    return (\n        <>\n        <AppBar\n        color='default'\n        position='static'\n        style={{ alignItems: 'center' }}\n        >\n            <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n            <Toolbar>\n                <AnchorLink href=\"#about\" \n                    className={classes.anchor}>\n                    <Button>\n                        HOME\n                    </Button>\n                </AnchorLink>\n\n                <AnchorLink href=\"#contact\" className={classes.anchor}>\n                    <Button color='inherit'>\n                        CONTACT\n                    </Button>\n                </AnchorLink>\n            </Toolbar>\n        </AppBar>\n    </>\n    )\n}\n\nexport default Header"]},"metadata":{},"sourceType":"module"}